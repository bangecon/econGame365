rownames(outputMatrix) <-
c("Strategy = High Output", "Strategy = Low Output")
priceMatrix <- matrix(c(
round(price(c(Q.D, Q.D)), 4),
round(price(c(Q.C.off, Q.D.off)), 4),
round(price(c(Q.C.off, Q.D.off)), 4),
round(price(c(Q.C, Q.C)), 4)),
nrow = 2, ncol = 2)
priceMatrix <- matrix(c(
round(price(Q.D, Q.D), 4),
round(price(Q.C.off, Q.D.off), 4),
round(price(Q.C.off, Q.D.off), 4),
round(price(Q.C, Q.C), 4)),
nrow = 2, ncol = 2)
colnames(priceMatrix) <-
c("Partner = High Output", "Partner = Low Output")
rownames(priceMatrix) <-
c("Strategy = High Output", "Strategy = Low Output")
results
grades <- results[, c("First.Name", "Last.Name", "Profit")]
colnames(grades) <- c("First.Name", "Last.Name", "Score")
grades  <- grades[order(grades$Last.Name, grades$First.Name), ]
out <- list(
type = "cournotGame",
payoff = payoffMatrix,
output = outputMatrix,
price = priceMatrix,
results = results[order(results$Last.Name.1, results$First.Name.1), ],
grades = grades[order(grades$`Last Name`, grades$`First Name`), ]
)
out <- list(
type = "cournotGame",
payoff = payoffMatrix,
output = outputMatrix,
price = priceMatrix,
results = results[order(results$Last.Name, results$First.Name), ],
grades = grades[order(grades$Last.Name, grades$First.Name), ]
)
class(out) <- c('econGame', class(out))
out
source("C:/Users/bange/Github/econGame365/R/cournotGame.R", echo = TRUE)
cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu")
cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu", user = "bange")
shiny::runApp('inst/shiny-examples/cournotGameApp')
plot(cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu", user = "bange"))
plot(cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu", user = "bange"))
source("C:/Users/bange/Github/econGame365/R/cournotGame.R", echo = TRUE)
plot(cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu", user = "bange"))
source("C:/Users/bange/Github/econGame365/R/cournotGame.R", echo = TRUE)
plot(cournotGame(resultsFilename = "Cournot Duopoly Game.xlsx", rolesFilename = "StudentList.xlsx", team = "sau.edu", user = "bange"))
runApp('inst/shiny-examples/cournotGameApp')
resultsFilename = "Bertrand Duopoly Game Student Partners.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
resultsFilename = "Bertrand Duopoly Game.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
if (a  <= 0)
stop("The intercept of the demand function needs to be positive.")
if (b  >= 0)
stop("Demand curves are downward-sloping!")
if (c <= 0)
stop("There ain't no such thing as a free lunch (TANSTAAFL)!")
if (f <  0)
stop("Fixed costs must be non-negative.")
Q.M = (a - c) / (-2 * b)
Q.C = Q.M / 2
Q.D = (a - c) / (-3 * b)
Q.C.off = Q.M / 2
Q.D.off = (a - c + b * Q.C.off) / (-2 * b)
price <- function(q1, q2)
a + b * (q1 + q2)
roles <- randomGroups(
filename = rolesFilename,
user = user,
drive = drive,
team = team,
subdir = subdir,
seed = seed
)
if (is.null(team)) {
team <- "/OneDrive/"
} else {
team <- paste0("/OneDrive - ", team, "/")
}
path <- paste0(drive, ":/Users/", user, team, subdir, resultsFilename)
results <- readxl::read_excel(path)
results <-  results[order(results$Group, results$Member), ]
resultsFilename = "Bertrand Duopoly Game.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/bertrandGame.R", echo = TRUE)
if (a  <= 0)
stop("The intercept of the demand function needs to be positive.")
if (b  >= 0)
stop("Demand curves are downward-sloping!")
if (c <= 0)
stop("There ain't no such thing as a free lunch (TANSTAAFL)!")
if (f <  0)
stop("Fixed costs must be non-negative.")
Q.M = (a - c) / (-2 * b)
Q.C = Q.M / 2
Q.D = (a - c) / (-3 * b)
Q.C.off = Q.M / 2
Q.D.off = (a - c + b * Q.C.off) / (-2 * b)
price <- function(q1, q2)
a + b * (q1 + q2)
roles <- randomGroups(
filename = rolesFilename,
user = user,
drive = drive,
team = team,
subdir = subdir,
seed = seed
)
if (is.null(team)) {
team <- "/OneDrive/"
} else {
team <- paste0("/OneDrive - ", team, "/")
}
path <- paste0(drive, ":/Users/", user, team, subdir, resultsFilename)
results <- readxl::read_excel(path)
colnames(results) <- make.names(colnames(results))
results$First.Name <- make.names(results$First.Name)
results$Last.Name <- make.names(results$Last.Name)
results <- results %>%
replace_na(list(First.Name = "John", Last.Name = "Doe")) %>%
mutate(First.Name = str_to_title(First.Name),
Last.Name = str_to_title(Last.Name))
results <- merge(roles$long, results, by = c("First.Name", "Last.Name"))
results <-  results[order(results$Group, results$Member), ]
results
results1 <- subset(results, Member == 1)[, c("First.Name", "Last.Name", "Price")]
colnames(results1) <-
c("First.Name.1", "Last.Name.1", "Price.1")
results2 <- subset(results, Member == 2)[, c("First.Name", "Last.Name", "Price")]
colnames(results2) <-
c("First.Name.2", "Last.Name.2", "Price.2")
resultsWide <- cbind(results1, results2)
runApp('inst/shiny-examples/cournotGameApp')
source("C:/Users/bange/Github/econGame365/R/cournotGame.R", echo = TRUE)
runApp('inst/shiny-examples/cournotGameApp')
View(resultsWide)
resultsWide
View(resultsWide)
resultsFilename = "Bertrand Duopoly Game.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
if (is.null(team)) {
team <- "/OneDrive/"
} else {
team <- paste0("/OneDrive - ", team, "/")
}
path <- paste0(drive, ":/Users/", user, team, subdir, resultsFilename)
results <- readxl::read_excel(path)
colnames(results) <- make.names(colnames(results))
results$First.Name <- make.names(results$First.Name)
results$Last.Name <- make.names(results$Last.Name)
results$Partner.First.Name <- make.names(results$Partner.First.Name)
resultsFilename = "Bertrand Duopoly Game Student Partners.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
if (is.null(team)) {
team <- "/OneDrive/"
} else {
team <- paste0("/OneDrive - ", team, "/")
}
path <- paste0(drive, ":/Users/", user, team, subdir, resultsFilename)
results <- readxl::read_excel(path)
colnames(results) <- make.names(colnames(results))
results$First.Name <- make.names(results$First.Name)
results$Last.Name <- make.names(results$Last.Name)
results$Partner.First.Name <- make.names(results$Partner.First.Name)
results$Partner.Last.Name <- make.names(results$Partner.Last.Name)
results <- results %>%
replace_na(list(First.Name = "John", Last.Name = "Doe")) %>%
mutate(
First.Name = str_to_title(First.Name),
Last.Name = str_to_title(Last.Name),
Partner.First.Name = str_to_title(Partner.First.Name),
Partner.Last.Name = str_to_title(Partner.Last.Name)
)
results <- as.data.frame(results)
results <-  results[order(results$First.Name, results$Last.Name), ]
results$group1 <- paste0(
results$First.Name,
results$Last.Name,
"-",
results$Partner.First.Name,
results$Partner.Last.Name
)
results$group2 <- paste0(
results$Partner.First.Name,
results$Partner.Last.Name,
"-",
results$First.Name,
results$Last.Name
)
results$Group <- round(rank(apply(results[, c("group1", "group2")], 1, min)), 0) /
2
results$Member <- with(results, ave(Group, Group, FUN = seq_along))
results <- as.data.frame(results[order(results$Group, results$Member), ])
results1 <- subset(results, Member == 1)[, c("First.Name", "Last.Name", "Price")]
colnames(results1) <-
c("First.Name.1", "Last.Name.1", "Price.1")
results2 <- subset(results, Member == 2)[, c("First.Name", "Last.Name", "Price")]
colnames(results2) <-
c("First.Name.2", "Last.Name.2", "Price.2")
resultsWide <- cbind(results1, results2)
resultsWide
resultsWide$Price.M  <-
apply(results[, which(names(results) %in% c("Price.1", "Price.2"))], 1, min)
resultsWide$Price.M  <- min(resultsWide$Price.1, resultsWide$Price.2)
resultsWide$Q.M <- (a - results$Price.M) / (-b)
resultsWide$Price.M  <- min(resultsWide$Price.1, resultsWide$Price.2)
resultsWide$Q.M <- (a - resultsWide$Price.M) / (-b)
resultsWide$Q.1 <- ifelse(
resultsWide$Price.1 > resultsWide$Price.M,
0,
ifelse(
resultsWide$Price.1 == resultsWide$Price.2,
resultsWide$Q.M / 2,
resultsWide$Q.M
)
)
resultsWide$Q.2 <- ifelse(
resultsWide$Price.2 > resultsWide$Price.M,
0,
ifelse(
resultsWide$Price.1 == resultsWide$Price.2,
resultsWide$Q.M / 2,
resultsWide$Q.M
)
)
resultsWide
resultsWide[, c("Price.1", "Price.2")]
resultsWide$Price.M  <- apply(
resultsWide[, c("Price.1", "Price.2")], 1, min)
resultsWide
resultsWide$Q.M <- (a - results$Price.M) / (-b)
resultsWide$Price.M  <- apply(
resultsWide[, c("Price.1", "Price.2")], 1, min)
resultsWide$Q.M <- (a - resultsWide$Price.M) / (-b)
resultsWide$Q.1 <- ifelse(
resultsWide$Price.1 > resultsWide$Price.M,
0,
ifelse(
resultsWide$Price.1 == resultsWide$Price.2,
resultsWide$Q.M / 2,
resultsWide$Q.M
)
)
resultsWide$Q.2 <- ifelse(
resultsWide$Price.2 > resultsWide$Price.M,
0,
ifelse(
resultsWide$Price.1 == resultsWide$Price.2,
resultsWide$Q.M / 2,
resultsWide$Q.M
)
)
results2
resultsWide
(a + c)/2
(a - c)/(-2*b)
P.C <- (a + c)/2
payoffMatrix <- matrix(c(
paste0("(", 0, ", ", 0, ")"),
paste0("(", 0, ", ", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 4), ")"),
paste0("(", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 4), ", ", 0, ")"),
paste0("(", round(Profit.C/2, 2), ", ", round(Profit.C/2, 2), ")")),
nrow = 2, ncol = 2)
Profit.C <- (a - c)^2/(-4*b)
grades <-
aggregate(Profit ~ First.Name.1 + Last.Name.1,
data = results,
FUN = sum)
payoffMatrix <- matrix(c(
paste0("(", 0, ", ", 0, ")"),
paste0("(", 0, ", ", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 4), ")"),
paste0("(", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 4), ", ", 0, ")"),
paste0("(", round(Profit.C/2, 2), ", ", round(Profit.C/2, 2), ")")),
nrow = 2, ncol = 2)
colnames(payoffMatrix) <-
c("Partner = Defect", "Partner = Collude")
rownames(payoffMatrix) <-
c("Strategy = Defect", "Strategy = Collude")
payoffMatrix
outputMatrix <- matrix(c(
paste0("(", (a + b*c)/2, ", ", (a + b*c)/2, ")"),
paste0("(", 0, ", ", a + b*(P.C - 0.01), ")"),
paste0("(", a + b*(P.C - 0.01), ", ", 0, ")"),
paste0("(", Q.C, ", ", Q.C, ")")),
nrow = 2, ncol = 2)
Q.M = (a - c) / (-2 * b)
Q.C = Q.M / 2
P.C <- (a + c)/2
Profit.C <- (a - c)^2/(-4*b)
Q.D = (a - c) / (-3 * b)
Q.D.off = (a - c + b * Q.C) / (-2 * b)
outputMatrix <- matrix(c(
paste0("(", (a + b*c)/2, ", ", (a + b*c)/2, ")"),
paste0("(", 0, ", ", a + b*(P.C - 0.01), ")"),
paste0("(", a + b*(P.C - 0.01), ", ", 0, ")"),
paste0("(", Q.C, ", ", Q.C, ")")),
nrow = 2, ncol = 2)
colnames(outputMatrix) <-
c("Partner = Defect", "Partner = Collude")
rownames(outputMatrix) <-
c("Strategy = Defect", "Strategy = Collude")
outputMatrix
priceMatrix <-
matrix(c(c, P.C - 0.01, Price.C - 0.01, P.C), nrow = 2, ncol = 2)
priceMatrix <- matrix(c(c, P.C - 0.01, P.C - 0.01, P.C), nrow = 2, ncol = 2)
colnames(priceMatrix) <- c("Partner = Defect", "Partner = Collude")
rownames(priceMatrix) <- c("Strategy = Defect", "Strategy = Collude")
priceMatrix
results <- data.frame(
First.Name = c(resultsWide$First.Name.1, resultsWide$First.Name.2),
Last.Name = c(resultsWide$Last.Name.1, resultsWide$Last.Name.2),
Partner.First.Name = c(resultsWide$First.Name.2, resultsWide$First.Name.1),
Partner.Last.Name = c(resultsWide$Last.Name.2, resultsWide$Last.Name.1),
Price = c(resultsWide$Price, resultsWide$Price),
Market.Price = c(resultsWide$Price.M, resultsWide$Price.M),
Output = c(resultsWide$Q.1, resultsWide$Q.2),
Partner.Output = c(resultsWide$Q.2, resultsWide$Q.1),
Profit = c(resultsWide$Profit.1, resultsWide$Profit.2)
)
results <- data.frame(
First.Name = c(resultsWide$First.Name.1, resultsWide$First.Name.2),
Last.Name = c(resultsWide$Last.Name.1, resultsWide$Last.Name.2),
Partner.First.Name = c(resultsWide$First.Name.2, resultsWide$First.Name.1),
Partner.Last.Name = c(resultsWide$Last.Name.2, resultsWide$Last.Name.1))
results <- data.frame(
First.Name = c(resultsWide$First.Name.1, resultsWide$First.Name.2),
Last.Name = c(resultsWide$Last.Name.1, resultsWide$Last.Name.2),
Partner.First.Name = c(resultsWide$First.Name.2, resultsWide$First.Name.1),
Partner.Last.Name = c(resultsWide$Last.Name.2, resultsWide$Last.Name.1),
Price = c(resultsWide$Price, resultsWide$Price))
results <- data.frame(
First.Name = c(resultsWide$First.Name.1, resultsWide$First.Name.2),
Last.Name = c(resultsWide$Last.Name.1, resultsWide$Last.Name.2),
Partner.First.Name = c(resultsWide$First.Name.2, resultsWide$First.Name.1),
Partner.Last.Name = c(resultsWide$Last.Name.2, resultsWide$Last.Name.1),
Price = c(resultsWide$Price.1, resultsWide$Price.2),
Market.Price = c(resultsWide$Price.M, resultsWide$Price.M),
Output = c(resultsWide$Q.1, resultsWide$Q.2),
Partner.Output = c(resultsWide$Q.2, resultsWide$Q.1),
Profit = c(resultsWide$Profit.1, resultsWide$Profit.2)
)
resultsWide
resultsWide$Profit.1 <- resultsWide$Q.1 * (resultsWide$Price.M - c) - f
resultsWide$Profit.2 <- resultsWide$Q.2 * (resultsWide$Price.M - c) - f
results <- data.frame(
First.Name = c(resultsWide$First.Name.1, resultsWide$First.Name.2),
Last.Name = c(resultsWide$Last.Name.1, resultsWide$Last.Name.2),
Partner.First.Name = c(resultsWide$First.Name.2, resultsWide$First.Name.1),
Partner.Last.Name = c(resultsWide$Last.Name.2, resultsWide$Last.Name.1),
Price = c(resultsWide$Price.1, resultsWide$Price.2),
Market.Price = c(resultsWide$Price.M, resultsWide$Price.M),
Output = c(resultsWide$Q.1, resultsWide$Q.2),
Partner.Output = c(resultsWide$Q.2, resultsWide$Q.1),
Profit = c(resultsWide$Profit.1, resultsWide$Profit.2)
)
resultsWide
results
results <- results[order(results$Last.Name.1, results$First.Name.1),]
results <- results[order(results$Last.Name, results$First.Name),]
payoffMatrix <- matrix(c(
paste0("(", 0, ", ", 0, ")"),
paste0("(", 0, ", ", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 2), ")"),
paste0("(", round((P.C - 0.01 - c)*(a + b*(P.C - 0.01)) - f, 2), ", ", 0, ")"),
paste0("(", round(Profit.C/2, 2), ", ", round(Profit.C/2, 2), ")")),
nrow = 2, ncol = 2)
colnames(payoffMatrix) <-
c("Partner = Defect", "Partner = Collude")
rownames(payoffMatrix) <-
c("Strategy = Defect", "Strategy = Collude")
outputMatrix <- matrix(c(
paste0("(", (a + b*c)/2, ", ", (a + b*c)/2, ")"),
paste0("(", 0, ", ", a + b*(P.C - 0.01), ")"),
paste0("(", a + b*(P.C - 0.01), ", ", 0, ")"),
paste0("(", Q.C, ", ", Q.C, ")")),
nrow = 2, ncol = 2)
colnames(outputMatrix) <-
c("Partner = Defect", "Partner = Collude")
rownames(outputMatrix) <-
c("Strategy = Defect", "Strategy = Collude")
priceMatrix <- matrix(c(c, P.C - 0.01, P.C - 0.01, P.C), nrow = 2, ncol = 2)
colnames(priceMatrix) <- c("Partner = Defect", "Partner = Collude")
rownames(priceMatrix) <- c("Strategy = Defect", "Strategy = Collude")
grades <- results[, c("First.Name", "Last.Name", "Profit")]
colnames(grades) <- c("First.Name", "Last.Name", "Score")
out <- list(type = "bertrandGame",
payoff = payoffMatrix,
output = outputMatrix,
price = priceMatrix,
results = results,
grades = grades)
class(out) <- c("econGame", class(out))
out
source("C:/Users/bange/Github/econGame365/R/bertrandGame.R", echo = TRUE)
bertrandGame(resultsFilename, rolesFilename, user, drive team, subdir)
bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir)
resultsFilename = "Bertrand Duopoly Game.xlsx"
rolesFilename = "StudentList.xlsx"
user = "bange"
drive = "c"
team = "sau.edu"
subdir = NULL
partners = "random"
a = 10
b = -1
c = 6
f = 0
seed = 8675309
library(tidyr)
library(stringr)
library(dplyr)
source("C:/Users/bange/Github/econGame365/R/randomGroups.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/randomRoles.R", echo = TRUE)
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir)
source("C:/Users/bange/Github/econGame365/R/bertrandGame.R", echo = TRUE)
bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir)
runApp('inst/shiny-examples/bertrandGameApp')
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
runApp('inst/shiny-examples/bertrandGameApp')
bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir, a, b, c, f, partners, seed)
bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir, a, b, c, f, partners, seed)$results
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
runApp('inst/shiny-examples/bertrandGameApp')
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
plot(bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir, a, b, c, f, partners, seed))
source("C:/Users/bange/Github/econGame365/R/plot_econGame.R", echo = TRUE)
plot(bertrandGame(resultsFilename, rolesFilename, user, drive, team, subdir, a, b, c, f, partners, seed))
runApp('inst/shiny-examples/bertrandGameApp')
